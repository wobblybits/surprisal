openapi: 3.0.3
info:
  title: Surprisal Calculator WM7Â±2 API
  description: |
    API for the Surprisal Calculator - converts text surprisal values to musical compositions and vice versa.
    
    This application calculates the "surprisingness" of words in text using large language models, 
    then translates these values into musical pitches. It also supports reverse generation - 
    playing musical notes to generate text with corresponding surprisal values.
    
    Built by David Feil and Elise Kim at the Recurse Center.
  version: "1.0.0"
  contact:
    name: "Surprisal Calculator"
    url: "https://github.com/wobblybits/surprisal"

servers:
  - url: http://localhost:8001
    description: Local development server
  - url: https://surprisal.onrender.com
    description: Production server

paths:
  /:
    get:
      summary: Main application interface
      description: Serves the web application interface
      responses:
        '200':
          description: HTML application interface
          content:
            text/html:
              schema:
                type: string

  /health:
    get:
      summary: Health check endpoint
      description: Returns application health status, uptime, model status, and configuration
      responses:
        '200':
          description: Application is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: number
                    example: 1640995200.0
                  uptime_seconds:
                    type: number
                    example: 3600.5
                  uptime_minutes:
                    type: number
                    example: 60.01
                  models:
                    type: object
                    additionalProperties:
                      type: string
                    example:
                      gpt2: "healthy"
                      smollm: "healthy"
                  config:
                    type: object
                    properties:
                      max_text_length:
                        type: integer
                        example: 1000
                      debug_mode:
                        type: boolean
                        example: false
                      origin_protection_enabled:
                        type: boolean
                        example: true
        '503':
          description: Application is unhealthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "unhealthy"
                  error:
                    type: string
                    example: "Model loading failed"
                  timestamp:
                    type: number

  /process/:
    post:
      summary: Convert text to surprisal values
      description: |
        Analyzes input text using the specified language model to calculate surprisal values 
        for each token, then returns data needed to generate musical composition.
      security:
        - description: |
            This API uses origin-based protection to prevent unwanted cross-origin requests.
            Requests must be made from the same origin as the API server.
      parameters:
        - in: header
          name: X-RateLimit-Limit
          schema:
            type: string
          description: Rate limit information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  maxLength: 1000
                  example: "The cat sat on the mat."
                  description: Input text to analyze
                model:
                  type: string
                  enum: ["gpt2", "smollm", "nano mistral", "qwen", "flan"]
                  default: "gpt2"
                  example: "gpt2"
                  description: Language model to use for surprisal calculation
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  type: string
                model:
                  type: string
      responses:
        '200':
          description: Successful analysis
          content:
            application/json:
              schema:
                type: object
                properties:
                  surprisals:
                    type: array
                    items:
                      type: number
                    example: [0, 5.2, 3.1, 8.7, 2.4, 6.8]
                    description: Surprisal values for each token
                  tokens:
                    type: array
                    items:
                      type: string
                    example: ["The", " cat", " sat", " on", " the", " mat"]
                    description: Tokenized text with whitespace processing
                  lengths:
                    type: array
                    items:
                      type: integer
                    example: [3, 4, 4, 3, 4, 4]
                    description: Character length of each token (for note duration)
                  frequencies:
                    type: array
                    items:
                      type: number
                    example: [6.5, 4.2, 5.1, 7.8, 6.5, 3.9]
                    description: Word frequency scores (for note volume)
                  frequencies_inverted:
                    type: array
                    items:
                      type: number
                    example: [1.5, 3.8, 2.9, 0.5, 1.5, 4.1]
                    description: Inverted frequency scores for volume scaling
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'

  /reverse/:
    post:
      summary: Generate text from musical notes
      description: |
        Given input text and a musical note (scale pitch), generates the next word 
        that has a surprisal value corresponding to the specified pitch.
      security:
        - description: |
            This API uses origin-based protection to prevent unwanted cross-origin requests.
            Requests must be made from the same origin as the API server.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - note
              properties:
                text:
                  type: string
                  maxLength: 1000
                  example: "The cat"
                  description: Existing text context (can be empty)
                note:
                  type: integer
                  minimum: 0
                  maximum: 23
                  example: 5
                  description: Scale pitch index corresponding to desired surprisal level
                model:
                  type: string
                  enum: ["gpt2", "smollm", "nano mistral", "qwen", "flan"]
                  default: "gpt2"
                  example: "gpt2"
                  description: Language model to use for text generation
      responses:
        '200':
          description: Successfully generated text
          content:
            application/json:
              schema:
                type: object
                properties:
                  input_text:
                    type: string
                    example: "The cat"
                    description: Original input text
                  target_pitch:
                    type: integer
                    example: 5
                    description: Requested pitch index
                  best_token:
                    type: string
                    example: " meowed"
                    description: Generated token with closest surprisal match
                  best_surprisal:
                    type: number
                    example: 10.2
                    description: Actual surprisal value of generated token
                  actual_pitch:
                    type: integer
                    example: 5
                    description: Actual pitch index of generated token
                  candidates:
                    type: array
                    items:
                      type: object
                      properties:
                        token:
                          type: string
                        surprisal:
                          type: number
                        pitch:
                          type: integer
                    example:
                      - token: " meowed"
                        surprisal: 10.2
                        pitch: 5
                      - token: " purred"
                        surprisal: 10.8
                        pitch: 5
                    description: Top 5 candidate tokens with similar surprisal values
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /debug_tokens/{model_name}:
    get:
      summary: Debug tokenization for a specific model
      description: |
        Development endpoint to inspect how different models tokenize text. 
        Useful for understanding model-specific tokenization behavior.
      parameters:
        - in: path
          name: model_name
          required: true
          schema:
            type: string
            enum: ["gpt2", "smollm", "nano mistral", "qwen", "flan"]
          example: "gpt2"
          description: Model to test tokenization with
      responses:
        '200':
          description: Tokenization debug information
          content:
            application/json:
              schema:
                type: object
                properties:
                  model:
                    type: string
                    example: "gpt2"
                  test_text:
                    type: string
                    example: "Hello world"
                  tokens:
                    type: array
                    items:
                      type: string
                    example: ["Hello", "Ä world"]
                  whitespace_char:
                    type: string
                    example: "Ä "
                    description: Character used by this model to represent whitespace

  /assets/{filename}:
    get:
      summary: Serve static assets
      description: Serves CSS, JavaScript, images, audio, and other static files
      parameters:
        - in: path
          name: filename
          required: true
          schema:
            type: string
          description: Path to asset file (supports subdirectories)
          example: "css/styles.css"
      responses:
        '200':
          description: Asset file content
        '404':
          description: Asset not found
        '400':
          description: Invalid file path (security check failed)

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Text input is too long (maximum 1000 characters)"
    
    RateLimitError:
      type: object
      properties:
        error:
          type: string
          example: "Rate limit exceeded"
        message:
          type: string
          example: "Too many requests. Please try again later."
        retry_after:
          type: integer
          nullable: true
          example: 60
          description: Seconds until rate limit resets

  securitySchemes:
    CSRFToken:
      type: apiKey
      in: header
      name: X-CSRFToken
      description: |
        CSRF protection token (when CSRF is enabled). 
        Can be obtained from the frontend application.

tags:
  - name: Application
    description: Main application endpoints
  - name: Processing
    description: Text and musical processing endpoints
  - name: Debug
    description: Development and debugging endpoints
  - name: Assets
    description: Static file serving 